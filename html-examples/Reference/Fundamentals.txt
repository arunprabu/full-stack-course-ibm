Server Side Rendering Apps 
====
 HTML + CSS + JS + Backend Code 
    
Server: Apache, Tomcat, jBOSS, IIS, Websphere 

Characteristics
===
Refreshes the page
Server has to do the heavy lifting 
        (html, css, js + backend + db) 
high bandwidth consumption 
slow 
entire page content will be with html, css, js, and data combined 

Client Side Rendering Apps
=====
HTML, CSS, JS (run separately in a server port may be 4200 )
BAckend ( run in another server --port may be 8080)
Data will be in JSON format 

Characteristics
===
Page wil not refresh 
One server powering up the front end & another for backend 
Initial load will take time
Better User Experience 



Browser 
====
HTML Renderer 
    Line by line execution 

CSS Parser 
    Line by line executio and char by char 
    impacts the html elements 

JavaScript  Engine 
    JS Parser 
    Executing Synchronously -- one line of code at one moment


Front End Tech
=====
Structural layer 
    HTML 

Presentation Layer 
    CSS

Interaction Layer 
    JS 

Skeleton = HTML 
Dressing up = CSS
Actions = JS 
Flesh = Data ( from Backend )

HTML
===
Hypertext Markup Language 
Hypertext? 
    Text + Multimedia served over Web 
HTTP 
    rulebook for How the hypertext should be 
    transfered to the browser

HTTPS  = HTTP + SSL 
    Web commn over https secure 
    Encryption 

===
evolved from XML

Elements
====
1. Block level Elements 
    h1 to h6 
2. Inline Elements 



Meta Tag
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="keywords" content="HTML,CSS,JavaScript">
<meta name="description" content="Full Stack Development with HTML, CSS, JavaScript, Angular, ReactJS and Java Stack">
<link rel="icon" href="/favicon.ico" type="image/x-icon">
<link rel="stylesheet" href="/w3css/4/w3.css">
<link href='https://fonts.googleapis.com/css?family=Source Code Pro' rel='stylesheet'>

Images Types
=====
1. Raster Images 
    fixed width n height
    pixelate when you zoom 
    format: png (portable network graphics), 
            jpg (joint photographic experts group), jpeg, 
            gif (graphics interchange format), 
            tiff 
2. Vector Images 
    no fixed width n height
    will not pixelate when you zoom 
    format: svg ( scalable vector graphics)

HTML5 Multimedia 
    Video
    Audio 
HTML5 Graphics
    HTML5 Canvas 
    HTML5 SVG's 
HTML 5 API's 
    WebStorage 
        There's storage space in the browser, 
        in which you can store the data
         
        unlimited storage 
        1. LocalStorage
            Will store it forever 
            key value pair 
            Can remove it manually, or thru JS 

        2. SessionStorage 
            Will store data until you close the browser
            key value pair 
            Can remove it manually, or thru JS,
            automatically wiped off when you close the browser

    
    
    Geolocation
    Drag and Drop  
    ServiceWorker 

====
What is CSS?
====
Cascading Style Sheet 

StyleSheet
===
will have Styles

Style 
====


Syntax
===
*/ style */
/* in the below css 'div' is a selector */
div {
    /* style defn */
    /* property: property-value; */
    background-color: red;
}


3 Types of Styles 
====
1. External Styles
    Should be used in head tag 
    <link rel="StyleSheet"
2. Internal Styles
    inside head tag and within style tag  
    will apply in one page only 
    page-specific styles 
    <style>
        body{
            margin: 0;
            background-color: aliceblue;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
        }

        header{
            background-color: #607D8B;
            border-bottom: 1px solid #cccccc;
        }
    </style>
    
    Disadv: 
        Styles Cannot be used in another page


3. Inline Styles 
    in style attribute 
    Will apply on the Element
    Adv: Ideal place for overriding any previous styles 
    Disadv: Maintenance Issues, 
            Style cannot be re-used, 
            may have duplicate code style defn. 

Selectors 
====
1. Elements Selectors ( div, h1, h6, p, input )
2. Id Selectors  ( #history, #recruitment )
3. Class Selectors ( .topHeader)
4. Attribute Selectors (  [type='text'] )
5. Psedo Selectors ( :hover )





